<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="64" hostname="LAPTOP-MFTDCFGC" failures="2" tests="22" name="Default test" time="120.683" errors="0" timestamp="19 Jul 2020 08:31:09 GMT">
  <testcase classname="com.jticketing.testCases.ZeroTicketPriceEventTPageTest" name="zeroticketpriceevent" time="0.0">
    <skipped/>
  </testcase> <!-- zeroticketpriceevent -->
  <testcase classname="com.jticketing.testCases.EventWithoutTicketPageTest" name="eventwithouttickettype" time="0.0">
    <skipped/>
  </testcase> <!-- eventwithouttickettype -->
  <testcase classname="com.jticketing.testCases.Event_AttendeeFieldTypesPageTest" name="eventcreation" time="0.0">
    <skipped/>
  </testcase> <!-- eventcreation -->
  <testcase classname="com.jticketing.testCases.Event_BookingAndEventDateCombinationsPageTest" name="eventcreation" time="0.0">
    <skipped/>
  </testcase> <!-- eventcreation -->
  <testcase classname="com.jticketing.testCases.PublishedEventPageTest" name="CreatePublishedEvent" time="0.0">
    <skipped/>
  </testcase> <!-- CreatePublishedEvent -->
  <testcase classname="com.jticketing.testCases.Event_MoreThanOneTicketPageTest" name="eventcreation" time="0.0">
    <skipped/>
  </testcase> <!-- eventcreation -->
  <testcase classname="com.jticketing.testCases.Event_MoreThanOneAttendeePageTest" name="eventcreation" time="0.0">
    <skipped/>
  </testcase> <!-- eventcreation -->
  <testcase classname="com.jticketing.testCases.Event_AllowSeeEventAttendeePageTest" name="eventcreation" time="0.0">
    <skipped/>
  </testcase> <!-- eventcreation -->
  <testcase classname="com.jticketing.testCases.ALoginTest" name="adminLogin" time="0.0">
    <skipped/>
  </testcase> <!-- adminLogin -->
  <testcase classname="com.jticketing.testCases.OfflineEventPageTest" name="offlineeventcreation" time="0.0">
    <skipped/>
  </testcase> <!-- offlineeventcreation -->
  <testcase classname="com.jticketing.testCases.AComponentPageTest" name="componentselection" time="120.089">
    <failure type="org.openqa.selenium.TimeoutException" message="Expected condition failed: waiting for visibility of Proxy element for: DefaultElementLocator &amp;apos;By.xpath: //*[@id=&amp;quot;menu&amp;quot;]/li[5]/a&amp;apos; (tried for 20 second(s) with 500 milliseconds interval)">
      <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for visibility of Proxy element for: DefaultElementLocator 'By.xpath: //*[@id="menu"]/li[5]/a' (tried for 20 second(s) with 500 milliseconds interval)
at org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:95)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:272)
at com.jticketing.pages.AComponentPage.component(AComponentPage.java:31)
at com.jticketing.testCases.AComponentPageTest.componentselection(AComponentPageTest.java:14)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
Caused by: org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="menu"]/li[5]/a"}
  (Session info: chrome=84.0.4147.89)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'LAPTOP-MFTDCFGC', ip: '192.168.43.180', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '14.0.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 84.0.4147.89, chrome: {chromedriverVersion: 84.0.4147.30 (48b3e868b4cc0..., userDataDir: C:\Users\morka\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:53810}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}
Session ID: b46e6f42840c4f8817d9e6c98bb64a80
*** Element info: {Using=xpath, value=//*[@id="menu"]/li[5]/a}
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:428)
at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at com.sun.proxy.$Proxy16.isDisplayed(Unknown Source)
at org.openqa.selenium.support.ui.ExpectedConditions.elementIfVisible(ExpectedConditions.java:314)
at org.openqa.selenium.support.ui.ExpectedConditions.access$000(ExpectedConditions.java:43)
at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:300)
at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:297)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:249)
... 27 more
]]>
    </failure>
  </testcase> <!-- componentselection -->
  <testcase classname="com.jticketing.testCases.Event_TicketAndBookingDateCombinationsPageTest" name="eventcreation" time="0.0">
    <skipped/>
  </testcase> <!-- eventcreation -->
  <testcase classname="com.jticketing.testCases.UnlimitedSeatsEventPageTest" name="CreateEventWithUnlimitedSeats" time="0.0">
    <skipped/>
  </testcase> <!-- CreateEventWithUnlimitedSeats -->
  <testcase classname="com.jticketing.testCases.Event_DenySeeEventAttendeePageTest" name="eventcreation" time="0.0">
    <failure type="org.testng.TestNGException" message="
Method public void com.jticketing.testCases.Event_DenySeeEventAttendeePageTest.eventcreation(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.reflect.Method) throws java.lang.Exception requires a @DataProvider named : denyseeeventattendee in class com.jticketing.dataproviders.DataProviderClass">
      <![CDATA[org.testng.TestNGException: 
Method public void com.jticketing.testCases.Event_DenySeeEventAttendeePageTest.eventcreation(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.reflect.Method) throws java.lang.Exception requires a @DataProvider named : denyseeeventattendee in class com.jticketing.dataproviders.DataProviderClass
at org.testng.internal.Parameters.findDataProvider(Parameters.java:513)
at org.testng.internal.Parameters.handleParameters(Parameters.java:691)
at org.testng.internal.ParameterHandler.handleParameters(ParameterHandler.java:49)
at org.testng.internal.ParameterHandler.createParameters(ParameterHandler.java:37)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:924)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </failure>
  </testcase> <!-- eventcreation -->
  <testcase classname="com.jticketing.testCases.CreateEventPageTest" name="eventcreation" time="0.0">
    <skipped/>
  </testcase> <!-- eventcreation -->
  <testcase classname="com.jticketing.testCases.UnpublishedEventPageTest" name="CreateUnpublishedEvent" time="0.0">
    <skipped/>
  </testcase> <!-- CreateUnpublishedEvent -->
  <testcase classname="com.jticketing.testCases.TicketTypeEventPageTest" name="eventwithtickettype" time="0.0">
    <skipped/>
  </testcase> <!-- eventwithtickettype -->
  <testcase classname="com.jticketing.testCases.Event_PastDateAndTimePageTest" name="eventcreation" time="0.0">
    <skipped/>
  </testcase> <!-- eventcreation -->
  <testcase classname="com.jticketing.testCases.LimitedSeatsEventPageTest" name="CreateEventWithLimitedSeats" time="0.0">
    <skipped/>
  </testcase> <!-- CreateEventWithLimitedSeats -->
  <testcase classname="com.jticketing.testCases.Event_AttendeeFieldRequiredPageTest" name="eventcreation" time="0.0">
    <skipped/>
  </testcase> <!-- eventcreation -->
  <testcase classname="com.jticketing.testCases.Event_AttendeeFieldNotRequiredPageTest" name="eventcreation" time="0.0">
    <skipped/>
  </testcase> <!-- eventcreation -->
  <testcase classname="com.jticketing.testCases.Event_EventImagePageTest" name="eventwithouttickettype" time="0.0">
    <skipped/>
  </testcase> <!-- eventwithouttickettype -->
  <testcase classname="com.jticketing.testbase.TestBase" name="@BeforeSuite beforeSuite" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeSuite beforeSuite -->
  <testcase classname="com.jticketing.testbase.TestBase" name="@BeforeSuite beforeSuite" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeSuite beforeSuite -->
  <testcase classname="com.jticketing.testbase.TestBase" name="@BeforeSuite beforeSuite" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeSuite beforeSuite -->
  <testcase classname="com.jticketing.testbase.TestBase" name="@BeforeSuite beforeSuite" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeSuite beforeSuite -->
  <testcase classname="com.jticketing.testbase.TestBase" name="@BeforeSuite beforeSuite" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeSuite beforeSuite -->
  <testcase classname="com.jticketing.testbase.TestBase" name="@BeforeSuite beforeSuite" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeSuite beforeSuite -->
  <testcase classname="com.jticketing.testbase.TestBase" name="@BeforeSuite beforeSuite" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeSuite beforeSuite -->
  <testcase classname="com.jticketing.testbase.TestBase" name="@BeforeSuite beforeSuite" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeSuite beforeSuite -->
  <testcase classname="com.jticketing.testbase.TestBase" name="@BeforeSuite beforeSuite" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeSuite beforeSuite -->
  <testcase classname="com.jticketing.testbase.TestBase" name="@BeforeSuite beforeSuite" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeSuite beforeSuite -->
  <testcase classname="com.jticketing.testbase.TestBase" name="@BeforeSuite beforeSuite" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeSuite beforeSuite -->
  <testcase classname="com.jticketing.testbase.TestBase" name="@BeforeSuite beforeSuite" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeSuite beforeSuite -->
  <testcase classname="com.jticketing.testbase.TestBase" name="@BeforeSuite beforeSuite" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeSuite beforeSuite -->
  <testcase classname="com.jticketing.testbase.TestBase" name="@BeforeSuite beforeSuite" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeSuite beforeSuite -->
  <testcase classname="com.jticketing.testbase.TestBase" name="@BeforeSuite beforeSuite" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeSuite beforeSuite -->
  <testcase classname="com.jticketing.testbase.TestBase" name="@BeforeSuite beforeSuite" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeSuite beforeSuite -->
  <testcase classname="com.jticketing.testbase.TestBase" name="@BeforeSuite beforeSuite" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeSuite beforeSuite -->
  <testcase classname="com.jticketing.testbase.TestBase" name="@BeforeSuite beforeSuite" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeSuite beforeSuite -->
  <testcase classname="com.jticketing.testbase.TestBase" name="@BeforeSuite beforeSuite" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeSuite beforeSuite -->
  <testcase classname="com.jticketing.testbase.TestBase" name="@BeforeSuite beforeSuite" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeSuite beforeSuite -->
  <testcase classname="com.jticketing.testbase.TestBase" name="@BeforeSuite beforeSuite" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeSuite beforeSuite -->
  <testcase classname="com.jticketing.testbase.TestBase" name="@BeforeSuite beforeSuite" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeSuite beforeSuite -->
  <testcase classname="com.jticketing.testbase.TestBase" name="@BeforeSuite beforeSuite" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeSuite beforeSuite -->
  <testcase classname="com.jticketing.testbase.TestBase" name="@BeforeSuite beforeSuite" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeSuite beforeSuite -->
  <testcase classname="com.jticketing.testbase.TestBase" name="@BeforeSuite beforeSuite" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeSuite beforeSuite -->
  <testcase classname="com.jticketing.testbase.TestBase" name="@BeforeSuite beforeSuite" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeSuite beforeSuite -->
  <testcase classname="com.jticketing.testbase.TestBase" name="@BeforeSuite beforeSuite" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeSuite beforeSuite -->
  <testcase classname="com.jticketing.testbase.TestBase" name="@BeforeSuite beforeSuite" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeSuite beforeSuite -->
  <testcase classname="com.jticketing.testbase.TestBase" name="@BeforeSuite beforeSuite" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeSuite beforeSuite -->
  <testcase classname="com.jticketing.testbase.TestBase" name="@BeforeSuite beforeSuite" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeSuite beforeSuite -->
  <testcase classname="com.jticketing.testbase.TestBase" name="@BeforeSuite beforeSuite" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeSuite beforeSuite -->
  <testcase classname="com.jticketing.testbase.TestBase" name="@BeforeSuite beforeSuite" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeSuite beforeSuite -->
  <testcase classname="com.jticketing.testbase.TestBase" name="@AfterSuite afterSuite" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite afterSuite -->
  <testcase classname="com.jticketing.testbase.TestBase" name="@AfterSuite afterSuite" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite afterSuite -->
  <testcase classname="com.jticketing.testbase.TestBase" name="@AfterSuite afterSuite" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite afterSuite -->
  <testcase classname="com.jticketing.testbase.TestBase" name="@AfterSuite afterSuite" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite afterSuite -->
  <testcase classname="com.jticketing.testbase.TestBase" name="@AfterSuite afterSuite" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite afterSuite -->
  <testcase classname="com.jticketing.testbase.TestBase" name="@AfterSuite afterSuite" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite afterSuite -->
  <testcase classname="com.jticketing.testbase.TestBase" name="@AfterSuite afterSuite" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite afterSuite -->
  <testcase classname="com.jticketing.testbase.TestBase" name="@AfterSuite afterSuite" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite afterSuite -->
  <testcase classname="com.jticketing.testbase.TestBase" name="@AfterSuite afterSuite" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite afterSuite -->
  <testcase classname="com.jticketing.testbase.TestBase" name="@AfterSuite afterSuite" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite afterSuite -->
  <testcase classname="com.jticketing.testbase.TestBase" name="@AfterSuite afterSuite" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite afterSuite -->
  <testcase classname="com.jticketing.testbase.TestBase" name="@AfterSuite afterSuite" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite afterSuite -->
  <testcase classname="com.jticketing.testbase.TestBase" name="@AfterSuite afterSuite" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite afterSuite -->
  <testcase classname="com.jticketing.testbase.TestBase" name="@AfterSuite afterSuite" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite afterSuite -->
  <testcase classname="com.jticketing.testbase.TestBase" name="@AfterSuite afterSuite" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite afterSuite -->
  <testcase classname="com.jticketing.testbase.TestBase" name="@AfterSuite afterSuite" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite afterSuite -->
  <testcase classname="com.jticketing.testbase.TestBase" name="@AfterSuite afterSuite" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite afterSuite -->
  <testcase classname="com.jticketing.testbase.TestBase" name="@AfterSuite afterSuite" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite afterSuite -->
  <testcase classname="com.jticketing.testbase.TestBase" name="@AfterSuite afterSuite" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite afterSuite -->
  <testcase classname="com.jticketing.testbase.TestBase" name="@AfterSuite afterSuite" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite afterSuite -->
  <testcase classname="com.jticketing.testbase.TestBase" name="@AfterSuite afterSuite" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite afterSuite -->
  <testcase classname="com.jticketing.testbase.TestBase" name="@AfterSuite afterSuite" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite afterSuite -->
  <testcase classname="com.jticketing.testbase.TestBase" name="@AfterSuite afterSuite" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite afterSuite -->
  <testcase classname="com.jticketing.testbase.TestBase" name="@AfterSuite afterSuite" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite afterSuite -->
  <testcase classname="com.jticketing.testbase.TestBase" name="@AfterSuite afterSuite" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite afterSuite -->
  <testcase classname="com.jticketing.testbase.TestBase" name="@AfterSuite afterSuite" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite afterSuite -->
  <testcase classname="com.jticketing.testbase.TestBase" name="@AfterSuite afterSuite" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite afterSuite -->
  <testcase classname="com.jticketing.testbase.TestBase" name="@AfterSuite afterSuite" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite afterSuite -->
  <testcase classname="com.jticketing.testbase.TestBase" name="@AfterSuite afterSuite" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite afterSuite -->
  <testcase classname="com.jticketing.testbase.TestBase" name="@AfterSuite afterSuite" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite afterSuite -->
  <testcase classname="com.jticketing.testbase.TestBase" name="@AfterSuite afterSuite" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite afterSuite -->
  <testcase classname="com.jticketing.testbase.TestBase" name="@AfterSuite afterSuite" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite afterSuite -->
</testsuite> <!-- Default test -->
